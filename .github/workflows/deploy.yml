name: Deploy to Production

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Create .env file
              run: |
                  cat << EOF > .env
                  # Database Configuration
                  DB_HOST=${{ secrets.DB_HOST }}
                  DB_PORT=3306
                  DB_USER=${{ secrets.DB_USER }}
                  DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                  DB_NAME=${{ secrets.DB_NAME }}

                  # API Configuration
                  API_PORT=3000

                  # Redis Configuration
                  REDIS_HOST=${{ secrets.REDIS_HOST }}
                  REDIS_PORT=6379
                  REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
                  REDIS_DB=0

                  # Logging Configuration
                  LOG_LEVEL=info
                  EOF

            - name: Install dependencies
              run: bun install

            - name: Run route tests
              run: bun test test/routes/*.test.ts

    deploy:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create .env file
              run: |
                  cat << EOF > .env
                  # Database Configuration
                  DB_HOST=${{ secrets.DB_HOST }}
                  DB_PORT=3306
                  DB_USER=${{ secrets.DB_USER }}
                  DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                  DB_NAME=${{ secrets.DB_NAME }}

                  # API Configuration
                  API_PORT=3000

                  # Redis Configuration
                  REDIS_HOST=${{ secrets.REDIS_HOST }}
                  REDIS_PORT=6379
                  REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
                  REDIS_DB=0

                  # Logging Configuration
                  LOG_LEVEL=info
                  EOF

            - name: Ensure server directory structure exists
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: |
                      mkdir -p /home/workspace/letletme-api/logs
                      mkdir -p /home/workspace/letletme-api/public
                      chmod 755 /home/workspace/letletme-api/logs
                      chmod 755 /home/workspace/letletme-api/public

            - name: Copy files to the Server
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  source: './src/,./public/,./package.json,./bun.lock,./.env,./drizzle/,./tsconfig.json,./drizzle.config.ts,./bunfig.toml,./.prettierrc.json,./.prettierignore,./eslint.config.ts,./scripts/deploy.sh'
                  target: '/home/workspace/letletme-api'
                  strip_components: 0
                  rm: false

            - name: Make deploy script executable
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: chmod +x /home/workspace/letletme-api/scripts/deploy.sh

            - name: Run deployment script
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: /home/workspace/letletme-api/scripts/deploy.sh
